{"version":3,"sources":["components/Feed.jsx","components/Search.jsx","components/Channel.jsx","components/Story.jsx","App.js","serviceWorker.js","index.js"],"names":["Feed","props","items","channels","map","t","i","react_default","a","createElement","FeedItem","key","item","onClick","class","src","thumbnail","e","name","title","stories","description","SearchChannels","input","query","value","type","placeholder","onChange","inputChange","Channel","posts","p","ChannelPost","post","console","log","summary","images","slice","url","comments","excerpt","Story","story","c","Comment","comment","Fragment","className","original","data","date","dangerouslySetInnerHTML","__html","html","replies","googleTranslate","body","owner","avatar","firstname","lastname","target","href","upvotes","downvotes","created","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeStory","activeChannel","activeChannelSearch","searchQuery","topChannels","searchChannels","bind","assertThisInitialized","handleSearch","handleQueryChange","handleChannelSelect","handleStorySelect","_this2","axios","get","then","response","setState","catch","error","message","alert","_this3","config","params","q","count","event","preventDefault","channelName","_this4","concat","sort","_this5","id","existing","source_url","channel","slug","main","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60d15edc.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Feed(props){\n\tconst channels = props.channels ? props.channels.items: [];\n\tconst items = channels.map((t, i) => <FeedItem key={i} item={t} onClick={props.onClick} />);\n\treturn (\n\t\t<section class=\"section\">\n    \t\t<div class=\"container\">\n\t\t\t\t{items}\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nfunction FeedItem(props) {\n\treturn (\n\t\t<article class=\"media\">\n\t\t  <figure class=\"media-left\">\n\t\t    <p class=\"image is-64x64\">\n\t\t      <img src={props.item.thumbnail} />\n\t\t    </p>\n\t\t  </figure>\n\t\t  <div class=\"media-content\" onClick={(e) => props.onClick(e, props.item.name)}>\n\t\t    <div class=\"content\">\n\t\t      <p>\n\t\t        <strong>{props.item.title}</strong> <small>{props.item.stories}</small> <small>Stories</small>\n\t\t        <br/>\n\t\t        {props.item.description}\n\t\t      </p>\n\t\t    </div>\n\t\t  </div>\n\t\t</article>\n\t)\n}","import React from 'react'\n\nexport default function SearchChannels(props){\n\tconst input = props.query ? <input class=\"input\" value={props.query} type=\"text\" placeholder=\"Channel\" onChange={props.inputChange}/>: <input class=\"input\" type=\"text\" placeholder=\"Channel\" onChange={props.inputChange} />;\n\treturn (\n\t\t<section class=\"section\">\n    \t\t<div class=\"container\">\n\t\t\t\t<div class=\"field has-addons\">\n\t\t\t\t  <p class=\"control is-expanded\">\n\t\t\t\t    {input}\n\t\t\t\t  </p>\n\t\t\t\t  <p class=\"control\">\n\t\t\t\t    <a class=\"button is-info\" onClick={props.onClick}>\n\t\t\t\t      Search\n\t\t\t\t    </a>\n\t\t\t\t  </p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import React from 'react'\n\nexport default function Channel(props){\n\tconst posts = props.posts ? props.posts.items: [];\n\tconst items = posts.map((p, i) => <ChannelPost key={i} post={p} onClick={props.onClick} />);\n\tconsole.log(props.posts, posts);\n\treturn (\n\t\t<section class=\"section\">\n    \t\t<div class=\"container\">\n\t\t\t\t{items}\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nfunction ChannelPost(props) {\n\treturn (\n\t\t<article class=\"media\">\n\t\t  <figure class=\"media-left\">\n\t\t    <p class=\"image is-64x64\">\n\t\t      <img src={props.post.summary.images.slice[0] ? props.post.summary.images.slice[0].url : \"https://cdn-images-1.medium.com/max/1200/1*SNI2ONdjDxSA3zeHYaMazg.png\"} />\n\t\t    </p>\n\t\t  </figure>\n\t\t  <div class=\"media-content\" onClick={(e) => props.onClick(e, props.post)}>\n\t\t    <div class=\"content\">\n\t\t      <p>\n\t\t        <strong>{props.post.title}</strong> <small>{props.post.comments}</small> <small>Comments</small>\n\t\t        <br/>\n\t\t        {props.post.summary.excerpt}\n\t\t      </p>\n\t\t    </div>\n\t\t  </div>\n\t\t</article>\n\t)\n}","import React from 'react'\n\nexport default function Story(props){\n\tconsole.log(props);\n\tconst comments = props.story.comments ? props.story.comments.items.map((c, i) => (<Comment key={i} comment={c} />)) : \"Loading Comments\";\n\treturn (\n\t\t<React.Fragment>\n\t\t<section class=\"section\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<h1 className=\"title\">{props.story.original ? props.story.original.data.title: \"Loading\"}</h1>\n\t\t\t\t<h2 class=\"subtitle\">{props.story.original ? props.story.original.data.date: \"Loading\"}</h2>\n\t\t\t\t<div className=\"content is-medium\" dangerouslySetInnerHTML={{__html: props.story.original ? props.story.original.data.html : \"Loading\"}}></div>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"section\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<h1 className=\"title\">Comments:</h1>\n\t\t\t\t{comments}\n\t\t\t</div>\n\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nfunction Comment(props){\n\tconst replies = props.comment.replies ? props.comment.replies.items.map((c, i) => (<Comment key={i} comment={c} />)) : \"\";\n\tconst googleTranslate = \"http://translate.google.com/#auto/en/\" + props.comment.body;\n\treturn (\n\t\t<article class=\"media\">\n\t\t  <figure class=\"media-left\">\n\t\t    <p class=\"image is-64x64\">\n\t\t      <img src={props.comment.owner.avatar}/>\n\t\t    </p>\n\t\t  </figure>\n\t\t  <div class=\"media-content\">\n\t\t    <div class=\"content\">\n\t\t      <p>\n\t\t        <strong>{props.comment.owner.firstname + \" \" + props.comment.owner.lastname}</strong>\n\t\t        <br/>\n\t\t        {props.comment.body}\n\t\t        <br/>\n\t\t        <small><a target=\"_blank\" href={googleTranslate}>Translate</a> · <a>{props.comment.upvotes - props.comment.downvotes} Points</a> · {props.comment.created}</small>\n\t\t      </p>\n\t\t    </div>\n\t\t    {replies}\n\t\t  </div>\n\t\t</article>\n\t)\n}\n\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport Feed from './components/Feed'\nimport SearchChannels from './components/Search'\nimport Channel from './components/Channel'\nimport Story from './components/Story'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeStory: null,\n      activeChannel: null,\n      activeChannelSearch: null,\n      searchQuery: null,\n    }\n    this.topChannels();\n    this.searchChannels = this.searchChannels.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n    this.handleChannelSelect = this.handleChannelSelect.bind(this);\n    this.handleStorySelect = this.handleStorySelect.bind(this);\n  }\n\n  topChannels() {\n    axios\n      .get(\n        `https://www.taringa.net/apiv7/c/list/hot?count=100&after=ina0&sort=hotness/`\n      )\n      .then(response => {\n        this.setState({\n          activeChannelSearch: response.data,\n          activeChannel: null,\n          activeStory: null,\n        })\n      })\n      .catch(error => {\n        // handle error\n          console.log(error.message)\n          alert(error)\n      })\n  }\n\n  searchChannels(query) {\n\n    const config = {params: {q: query, count: 100}};\n    axios\n      .get(\n        `https://www.taringa.net/apiv7/search/channel`,\n        config\n      )\n      .then(response => {\n        this.setState({\n          activeChannelSearch: response.data,\n          activeChannel: null,\n          activeStory: null,\n        })\n      })\n      .catch(error => {\n        // handle error\n          console.log(error.message)\n          alert(error)\n      })\n  }\n\n  handleQueryChange(event){\n    //console.log(event.target.value);\n    this.setState({searchQuery: event.target.value});\n  }\n\n  handleSearch(event) {\n    event.preventDefault();\n    this.searchChannels(this.state.searchQuery);\n  }\n\n  handleChannelSelect(e, channelName) {\n      const config = {params: {count: 100, sort: \"bigbang1d\"}};\n      axios\n        .get(\n          `https://www.taringa.net/apiv7/c/${channelName}/feed`,\n          config\n        )\n        .then(response => {\n           this.setState({activeChannel: response.data});\n        })\n        .catch(error => {\n          // handle error\n            console.log(error.message)\n            alert(error)\n        })\n    }\n\n  handleStorySelect(e, story) {\n      axios\n        .get(\n          `https://www.taringa.net/apiv7/story/${story.id}/comments?sort=created-desc&count=500&repliesCount=100&repliesSort=created-desc`,\n        )\n        .then(response => {\n           let existing = this.state.activeStory ? this.state.activeStory : {};\n           existing.comments = response.data;\n           this.setState({activeStory: existing});\n        })\n        .catch(error => {\n          // handle error\n            console.log(error.message)\n            alert(error)\n        })\n      const config = {\n        params:{source_url: `http://www.taringa.net/+${story.channel.name}/${story.slug}/`},\n      };\n      axios\n        .get(\n          `https://outlineapi.com/v2/parse_article`,\n          config,\n        )\n        .then(response => {\n           let existing = this.state.activeStory ? this.state.activeStory : {};\n           existing.original = response.data;\n           this.setState({activeStory: existing});\n        })\n        .catch(error => {\n          // handle error\n            console.log(error.message)\n            alert(error)\n        })\n    }\n\n  render() {\n    let main = (<Feed channels={this.state.activeChannelSearch} onClick={this.handleChannelSelect} />);\n    if (this.state.activeStory) {\n      main = (<Story story={this.state.activeStory} />);\n      console.log(\"Story time\");\n    } else if (this.state.activeChannel) {\n      main = (<Channel posts={this.state.activeChannel} onClick={this.handleStorySelect} />);\n    }\n    return (\n      <div className=\"App\">\n        <SearchChannels query={this.state.searchQuery} inputChange={this.handleQueryChange} onClick={this.handleSearch} />\n        {main}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}